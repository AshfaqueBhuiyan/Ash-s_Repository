# Muhammad Ashfaque Bhuiyan                                                           10-01-2023
# Assignment-3
# Description: Engage in an interactive game called Spinner Winner where participants place wagers to determine the ultimate outcome.

import random

def printTitleMaterial():
    """ This function prints the 'title material' that prints out when the program starts.
    """
    print("Spinner Winner!")
    print()
    print("By: Ashfaque")
    print("[COM S 127 G]")
    print()

def initialChoice():
    """ This function allows the player to make various choices when starting the game. This is an 
    example of the 'do-while' pattern.

    :return String: The choice the player has made when starting the program to [p]lay the game, view the
    [i]nstructions, or [q]uit the program.
    """
    choice = input("Choice? [p]lay, [i]nstructions, [q]uit: ")
    while choice != "p" and choice != "i" and choice != "q":
        print("ERROR: Please enter 'p', 'i', or 'q'...")
        choice = input("Choice? [p]lay, [i]nstructions, [q]uit: ")
    return choice

def chooseNumPlayers():
    """ This function allows the player to choose whether they will play against another
    human, or play against the computer.

    :return Integer: The number of players in the game.
    """
    numPlayers = 0
    while numPlayers != 1 and numPlayers != 2:
        try:
            numPlayers = int(input("Enter the number of players (1 or 2): "))
            if numPlayers != 1 and numPlayers != 2:
                print("ERROR: Please enter '1' for single player or '2' for two players.")
        except ValueError:
            print("ERROR: Please enter a valid number (1 or 2).")
    return numPlayers

def wait():
    """ This function has the computer 'wait' until the [Enter] key is pressed. This allows 
    for better 'readability' in the final output.
    """
    input("Press [Enter] To Continue...")
    print()

def printBanner():
    """ Prints the 'banner' between each round of the game so that the output text does not 
    get too 'messy.'
    """
    print("#######################################################################")
    print()
    print("~~ Starting New Round ~~")
    print()

def printPoints(playerNum, points):
    """ This function prints the number of points a certain player currently has.

    :param Integer playerNum: The player whose points are being displayed.
    :param Integer points: The number of points to be displayed
    """
    print("* Player {0} Has {1} Points!".format(playerNum, points))
    print()

def wagerPointsHuman(playerNum, points):
    """ This function uses the 'do-while' pattern to take in input for the number of points to be wagered. It checks to
    make sure that the player has entered a valid amount of points. Meaning, the player cannot wager more points than
    they have, nor zero points, nor a negative number of points. The function then returns the wager.

    As there could potentially be two human players, this function requires the playerNum to know which player to include
    in any printouts.

    :param Integer playerNum: The player to include in any printouts. Can be 1 or 2.
    :param Integer points: The number of points the specified player currently has.
    :return Integer: The number of points to be wagered.
    """
    while True:
        try:
            wager = int(input("Player {0}, enter the number of points to wager (1-{1}): ".format(playerNum, points)))
            if wager < 1 or wager > points:
                print("ERROR: Please enter a valid wager between 1 and {0}.".format(points))
            else:
                return wager
        except ValueError:
            print("ERROR: Please enter a valid number of points to wager.")

def wagerPointsAI(playerNum, points):
    """ This function should choose a random number between 1 and the number of points the AI has (inclusive). For example,
    if the computer has 5 points, it can wager either 1, 2, 3, 4, or 5. This function should include a printout similar to 
    what is printed when the human wagers points.

    :param Integer playerNum: The player to include in any printouts. While this will usually be 2, including this value allows 
                              for a future version of the game with 2 computer players.
    :param Integer points: The number of points the specified player currently has.
    :return Integer: The number of points to be wagered.
    """
    wager = random.randint(1, points)
    print("Player {0} wagers {1} points.".format(playerNum, wager))
    return wager

def generateTargetValue(numSpinners, spinnerLow, spinnerHigh):
    """ This function generates the 'target value' that the players try to match. This number is generated by summing together
    random values between 'spinnerLow' and 'spinnerHigh' (inclusive), produced by a random number of spinners, between 1 and 
    numSpinners (inclusive). For example, if there are 3 spinners, and a spinner can have values between 1 - 3, then the target 
    value would be the summation of 1-3 random values between 1 and 3
    (inclusive).

    :param Integer numSpinners: The number of spinners used in the game.
    :param Integer spinnerLow: The smallest value a spinner can generate.
    :param Integer spinnerHigh: The highest value a spinner can generate.
    :return Integer: The target value generated by summing together 'numSpinners' number of random numbers between 'spinnerLow' and
                     'spinnerHigh' (inclusive).
    """
    target = sum(random.randint(spinnerLow, spinnerHigh) for _ in range(random.randint(1, numSpinners)))
    return target

def getSpinnerChoiceHuman(playerNum, target, numSpinners, spinnerLow, spinnerHigh):
    """ This function gets the number of spinners that the human wants to spin. It should print out the 'target value' that the player
    is trying to match, as well as the values that a spinner can produce (ex: 1 - 3), and the number of spinners that can be spun. The
    player cannot pick more spinners than are in the game, nor can the pick zero spinners, nor can they pick a negative number of spinners.

    :param Integer playerNum: The player to include in any printouts. Can be 1 or 2.
    :param Integer target: The 'target value' the player is trying to match.
    :param Integer numSpinners: The total number of spinners in the game.
    :param Integer spinnerLow: The smallest value a spinner can generate.
    :param Integer spinnerHigh: The highest value a spinner can generate.
    :return Integer: The number of spinners the player chooses to spin.
    """
    print("Player {0}, the target value is {1}.".format(playerNum, target))
    print("Spinners can produce values between {0} and {1}.".format(spinnerLow, spinnerHigh))
    print("You can choose to spin between 1 and {0} spinners.".format(numSpinners))

    while True:
        try:
            spinnerChoice = int(input("Player {0}, enter the number of spinners to spin (1-{1}): ".format(playerNum, numSpinners)))
            if spinnerChoice < 1 or spinnerChoice > numSpinners:
                print("ERROR: Please enter a valid number of spinners between 1 and {0}.".format(numSpinners))
            else:
                return spinnerChoice
        except ValueError:
            print("ERROR: Please enter a valid number of spinners.")

def getSpinnerChoiceAI(playerNum, target, numSpinners, spinnerLow, spinnerHigh):
    """ This function gets the number of spinners that the computer wants to spin. This number should be a randomly generated value
    between 1 and numSpinners (inclusive). It should print out text similar to what the 'getSpinnerChoiceHuman()' function produces.

    :param Integer playerNum: The player to include in any printouts. While this will usually be 2, including this value allows 
                              for a future version of the game with 2 computer players.
    :param Integer target: The 'target value' the computer is trying to match. The computer does not take this value into account when
                           choosing the number of spinners - it should be used for printouts, however.
    :param Integer numSpinners: The total number of spinners in the game.
    :param Integer spinnerLow: The smallest value a spinner can generate.
    :param Integer spinnerHigh: The highest value a spinner can generate.
    :return Integer: The number of spinners the computer chooses to spin.
    """
    spinnerChoice = random.randint(1, numSpinners)
    print("Player {0}, the target value is {1}.".format(playerNum, target))
    print("Spinners can produce values between {0} and {1}.".format(spinnerLow, spinnerHigh))
    print("Player {0} chooses to spin {1} spinners.".format(playerNum, spinnerChoice))
    return spinnerChoice

def spinSpinners(playerNum, spinnerChoice, target, spinnerLow, spinnerHigh):
    """ This function can be used for either human or computer players, and it calculates the summed values of the number of
    spinner spins. For example, if the player chooses to spin 3 spinners, and these spinners can have values between 1 and 3,
    the player could spin values of 2, 3, and 1 for a total of 6. This is the value the function would return.

    This function should print out the results of each spin as each spin is spun. The function should then print the sum of 
    all the spins and the target value once all the spins are complete.

    Please note - the winner of the round is *not* calculated here - only the spinner totals.

    :param Integer playerNum: The player to include in any printouts. Can be 1 or 2.
    :param Integer spinnerChoice: The number of spinners the player wishes to spin.
    :param Integer target: Use this value in the printout so the user can compare what they spun compared to the target.
    :param Integer spinnerLow: The smallest value a spinner can generate.
    :param Integer spinnerHigh: The highest value a spinner can generate.
    :return Integer: The sum of all the spinner spins.
    """
    print("Player {0} spins {1} spinner(s)...".format(playerNum, spinnerChoice))
    spinTotal = 0
    for _ in range(spinnerChoice):
        spinVal = random.randint(spinnerLow, spinnerHigh)
        print("Spinner {0} result: {1}".format(_ + 1, spinVal))
        spinTotal += spinVal
    print("Player {0}, the total is {1}.".format(playerNum, spinTotal))
    print("The target value was {0}.".format(target))
    return spinTotal

def main():
    """ This is the main function that executes when the game is started from the terminal. It contains all of the logic/ states
    necessary to play the game.
    """
    # main script running control variable
    running = True
    
    # gameplay variables
    SPINNER_LOW = 1
    SPINNER_HIGH = 3
    NUM_SPINNERS = 3
    INITIAL_POINTS = 10
    player1Points = INITIAL_POINTS
    player2Points = INITIAL_POINTS

    # print the title/ author information
    printTitleMaterial()

    # play the game
    while running:
        choice = initialChoice()
        if choice == "p":

            numPlayers = chooseNumPlayers()

            # main game loop
            while True:
                # round setup
                printBanner()

                # Find a target value.
                target = generateTargetValue(NUM_SPINNERS, SPINNER_LOW, SPINNER_HIGH)

                # Player 1 wager. (Player 1 will always be human.)
                player1Wager = wagerPointsHuman(1, player1Points)

                # Player 2 wager. (Player 2 can be either human or AI - you must account for both.)
                if numPlayers == 2:
                    player2Wager = wagerPointsHuman(2, player2Points)
                else:
                    player2Wager = wagerPointsAI(2, player2Points)

                # Player 1 spin - get the total of all the spinners. (Player 1 will always be human.)
                player1Total = spinSpinners(1, getSpinnerChoiceHuman(1, target, NUM_SPINNERS, SPINNER_LOW, SPINNER_HIGH), target, SPINNER_LOW, SPINNER_HIGH)

                # Player 2 spin - get the total of all the spinners. (Player 2 can be either human or AI - you must account for both.)
                if numPlayers == 2:
                    player2Total = spinSpinners(2, getSpinnerChoiceHuman(2, target, NUM_SPINNERS, SPINNER_LOW, SPINNER_HIGH), target, SPINNER_LOW, SPINNER_HIGH)
                else:
                    player2Total = spinSpinners(2, getSpinnerChoiceAI(2, target, NUM_SPINNERS, SPINNER_LOW, SPINNER_HIGH), target, SPINNER_LOW, SPINNER_HIGH)

                # Calculate Winner of the Round. (If Player1 is closer, Player 1 wins. Else if Player 2 is closer Player 2 wins. If they are equal it is a draw.)
                if abs(target - player1Total) < abs(target - player2Total):
                    player1Points += player1Wager
                    player2Points -= player2Wager
                    print("Player 1 wins the round!")
                elif abs(target - player1Total) > abs(target - player2Total):
                    player2Points += player2Wager
                    player1Points -= player1Wager
                    print("Player 2 wins the round!")
                else:
                    print("It's a draw!")

                # Print the points for both players.
                printPoints(1, player1Points)
                printPoints(2, player2Points)

                # Check if the game is over - if it is, print a 'game over' message, reset the points to default values, 
                # and break out of the gameplay loop. Otherwise, print that it is the end of the round.
                if player1Points <= 0 or player2Points <= 0:
                    print("Game Over!")
                    print("Final Score:")
                    printPoints(1, player1Points)
                    printPoints(2, player2Points)
                    player1Points = INITIAL_POINTS
                    player2Points = INITIAL_POINTS
                    break
                else:
                    wait()
        elif choice == "i":
            # Print out the instructions for the game
            print("Instructions for Spinner Winner!")
            print("1. Spinner Winner! is a two-player game.")
            print("2. Each player starts with 10 points.")
            print("3. In each round, players will take turns to spin spinners and try to match a target value.")
            print("4. Players must wager points before spinning spinners.")
            print("5. The player who comes closer to the target value wins the round and gains points, while the other player loses points.")
            print("6. The game ends when one player's points reach 0 or below.")
            print("7. Have fun!")
        elif choice == "q":
            # Set 'running' to False, and print out a 'goodbye' message to the player.
            running = False
            print("Goodbye! Thanks for playing Spinner Winner!")
        else:
            print("ERROR: Variable 'choice' should have been 'p', 'i', or 'q', but instead was:", choice)
            quit()

if __name__ == "__main__":
    main()
